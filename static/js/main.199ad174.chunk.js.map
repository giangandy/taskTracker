{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Footer.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","to","About","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"6QAEMA,EAAS,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,QAC1B,OACI,wBACAA,QAAWA,EACXC,MAAS,CAACC,gBAAiBJ,GAC3BK,UAAY,MAHZ,SAIKJ,KAKbF,EAAOO,aAAe,CAClBN,MAAO,aASID,QCnBTQ,EAAS,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,QACrBC,EAAWC,cACjB,OACI,yBAAQP,UAAY,SAApB,UACI,6BAAKG,IACkB,MAAtBG,EAASE,UACL,cAAC,EAAD,CACGb,MAASU,EAAS,MAAQ,QAC1BT,KAAQS,EAAS,QAAU,MAC3BR,QAAWO,QAQ/BF,EAAOD,aAAe,CAClBE,MAAO,gBAaID,Q,QCjBAO,EAhBF,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SAC3B,OACI,sBAAKZ,UAAS,eAAaU,EAAKG,SAAU,WAAa,IACnDC,cAAiB,kBAAMF,EAASF,EAAKK,KADzC,UAEI,+BACKL,EAAKd,KACN,cAAC,IAAD,CACIE,MAAS,CAACH,MAAO,MAAOqB,OAAQ,WAChCnB,QAAW,kBAAMc,EAASD,EAAKK,UAGvC,4BAAIL,EAAKO,UCINC,EAfD,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,MAAOR,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SAC7B,OACI,mCACKO,EAAMC,KAAI,SAACV,GAAD,OACP,cAAC,EAAD,CAEIA,KAAQA,EACRC,SAAYA,EACZC,SAAYA,GAHLF,EAAKK,UCsDjBM,EA3DC,SAAC,GAAa,IAAZjB,EAAW,EAAXA,MACd,EAAwBkB,mBAAS,IAAjC,mBAAO1B,EAAP,KAAa2B,EAAb,KACA,EAAsBD,mBAAS,IAA/B,mBAAOL,EAAP,KAAYO,EAAZ,KACA,EAAgCF,oBAAS,GAAzC,mBAAOT,EAAP,KAAiBY,EAAjB,KAiBA,OACI,uBAAMzB,UAAY,WAAW0B,SAhBhB,SAACC,GACdA,EAAEC,iBAEGhC,GAKLQ,EAAM,CAACR,OAAKqB,MAAIJ,aAEhBU,EAAQ,IACRC,EAAO,IACPC,GAAY,IARRI,MAAM,sBAYV,UAEI,sBAAK7B,UAAU,eAAf,UACI,yCACA,uBACI8B,KAAO,OACPC,YAAc,WACdC,MAASpC,EACTqC,SAAY,SAACN,GAAD,OAAOJ,EAAQI,EAAEO,OAAOF,aAI5C,sBAAKhC,UAAU,eAAf,UACI,+CACA,uBACI8B,KAAO,OACPC,YAAc,iBACdC,MAASf,EACTgB,SAAY,SAACN,GAAD,OAAOH,EAAOG,EAAEO,OAAOF,aAI3C,sBAAKhC,UAAU,kCAAf,UACI,iDACA,uBACI8B,KAAO,WACPK,QAAWtB,EACXmB,MAASnB,EACToB,SAAY,SAACN,GAAD,OAAOF,EAAYE,EAAES,cAAcD,eAIvD,uBAAOL,KAAO,SAASE,MAAQ,YAAYhC,UAAY,sBC3CpDqC,EATA,WACX,OACI,mCACI,oDACA,cAAC,IAAD,CAAMC,GAAK,SAAX,uBCIGC,EATD,WACV,OACI,gCACI,+CACA,cAAC,IAAD,CAAMD,GAAG,IAAT,yBC6GGE,EA3GH,WAEV,MAAsClB,oBAAS,GAA/C,mBAAOmB,EAAP,KAAoBC,EAApB,KACA,EAA0BpB,mBAAS,IAAnC,mBAAOH,EAAP,KAAcwB,EAAd,KAEAC,qBAAU,YACM,uCAAG,sBAAAC,EAAA,kEACfF,EADe,SACAG,IADA,6EAAH,qDAIdC,KACC,IAGH,IAAMD,EAAU,uCAAG,8BAAAD,EAAA,sEACCG,MAAM,+BADP,cACXC,EADW,gBAEEA,EAAIC,OAFN,cAEXC,EAFW,yBAIVA,GAJU,2CAAH,qDAQVC,EAAS,uCAAG,WAAOrC,GAAP,iBAAA8B,EAAA,sEACEG,MAAM,+BAAD,OAAgCjC,IADvC,cACVkC,EADU,gBAEGA,EAAIC,OAFP,cAEVC,EAFU,yBAITA,GAJS,2CAAH,sDAQTE,EAAO,uCAAG,WAAO3C,GAAP,iBAAAmC,EAAA,sEAEIG,MAAM,8BAA+B,CACrDM,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUhD,KAPT,cAERuC,EAFQ,gBAUKA,EAAIC,OAVT,OAURC,EAVQ,OAWdR,EAAS,GAAD,mBAAKxB,GAAL,CAAYgC,KAXN,2CAAH,sDAmBPQ,EAAU,uCAAG,WAAO5C,GAAP,SAAA8B,EAAA,sEAEXG,MAAM,+BAAD,OAAgCjC,GAAM,CAC/CuC,OAAQ,WAHO,OAMjBX,EAASxB,EAAMyC,QAAO,SAAClD,GAAD,OAAUA,EAAKK,KAAOA,MAN3B,2CAAH,sDAUV8C,EAAc,uCAAG,WAAO9C,GAAP,qBAAA8B,EAAA,sEAEMO,EAAUrC,GAFhB,cAEf+C,EAFe,OAGfC,EAHe,2BAGAD,GAHA,IAGcjD,UAAWiD,EAAajD,WAHtC,SAKHmC,MAAM,+BAAD,OAAgCjC,GAAM,CAC3DuC,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUK,KAVF,cAKfd,EALe,gBAaFA,EAAIC,OAbF,OAafC,EAbe,OAerBR,EACExB,EAAMC,KAAI,SAACV,GAAD,OACRA,EAAKK,KAAOA,EAAZ,2BAAqBL,GAArB,IAA2BG,SAAUsC,EAAKtC,WAAYH,MAjBrC,4CAAH,sDAuBpB,OACE,cAAC,IAAD,UACE,sBAAKV,UAAU,YAAf,UACE,cAAC,EAAD,CACEI,MAAS,kBAAMsC,GAAgBD,IAC/BpC,QAAWoC,IAGb,cAAC,IAAD,CAAOuB,KAAO,IAAIC,OAAK,EAACC,OAAU,SAACC,GAAD,OAChC,qCACG1B,GAAe,cAAC,EAAD,CAASrC,MAASiD,IAEhClC,EAAMiD,OAAS,EACd,cAAE,EAAF,CAAQjD,MAASA,EAAOR,SAAYgD,EAAY/C,SAAYiD,IAC5D,yBAIP,cAAC,IAAD,CAAOG,KAAO,SAASK,UAAa9B,IACpC,cAAC,EAAD,UCjGO+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASb,OACP,cAAC,IAAMc,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.199ad174.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({color, text, onClick}) => {\r\n    return (\r\n        <button \r\n        onClick = {onClick}\r\n        style = {{backgroundColor: color}}\r\n        className = 'btn'>\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue'\r\n}\r\n\r\nButton.propTypes = {\r\n    color: PropTypes.string,\r\n    text: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Button from './Button';\r\n\r\nconst Header = ({title, onAdd, showAdd}) => {\r\n    const location = useLocation()\r\n    return (\r\n        <header className = 'header'>\r\n            <h1>{title}</h1>\r\n            {location.pathname === '/' && \r\n                (<Button \r\n                    color = {showAdd? 'red' : 'green'} \r\n                    text = {showAdd? 'Close' : 'Add'} \r\n                    onClick = {onAdd}\r\n                />)\r\n            }\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker',\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\n// CSS in JS\r\n// const headingStyles = {\r\n//     color: 'red',\r\n//     backgroundColor: 'black',\r\n// }\r\n\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({task, onDelete, onToggle}) => {\r\n    return (\r\n        <div className = { `task ${task.reminder? 'reminder' : ''}` } \r\n            onDoubleClick = {() => onToggle(task.id)}>\r\n            <h3>\r\n                {task.text} \r\n                <FaTimes \r\n                    style = {{color: 'red', cursor: 'pointer'}}\r\n                    onClick = {() => onDelete(task.id)}\r\n                /> \r\n            </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from \"./Task\"\r\n\r\nconst Tasks = ({tasks, onDelete, onToggle}) => {\r\n    return (\r\n        <>\r\n            {tasks.map((task) => (\r\n                <Task \r\n                    key = {task.id} \r\n                    task = {task} \r\n                    onDelete = {onDelete}\r\n                    onToggle = {onToggle}\r\n                />\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from 'react'\r\n\r\nconst AddTask = ({onAdd}) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (!text){\r\n            alert('Please add a task')\r\n            return\r\n        }\r\n\r\n        onAdd({text,day,reminder})\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form className = 'add-form' onSubmit = {onSubmit}>\r\n\r\n            <div className=\"form-control\">\r\n                <label>Task</label>\r\n                <input \r\n                    type = 'text' \r\n                    placeholder = 'Add Task'\r\n                    value = {text}\r\n                    onChange = {(e) => setText(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-control\">\r\n                <label>Day & Time</label>\r\n                <input \r\n                    type = 'text' \r\n                    placeholder = 'Add Day & Time'\r\n                    value = {day}\r\n                    onChange = {(e) => setDay(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-control form-control-check\">\r\n                <label>Set Reminder</label>\r\n                <input \r\n                    type = 'checkbox' \r\n                    checked = {reminder}\r\n                    value = {reminder}\r\n                    onChange = {(e) => setReminder(e.currentTarget.checked)}\r\n                />\r\n            </div>\r\n\r\n            <input type = 'submit' value = 'Save Task' className = 'btn btn-block'/>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import { Link } from 'react-router-dom'\r\n\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Copyright &copy; 2021</p>\r\n            <Link to = '/about'>About</Link>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { Link } from 'react-router-dom'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h4>Version 1.0.0</h4>\r\n            <Link to='/'>Go Back</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Header from \"./components/Header\";\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport Footer from './components/Footer';\nimport About from './components/About';\n\nconst App = () => {\n\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async () => {\n      setTasks(await fetchTasks())\n    }\n\n    getTasks()\n  }, [])\n\n  // Fetch Tasks - fetch all tasks\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n\n    return data\n  }\n\n  // Fetch Task - for toggle reminder\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json()\n\n    return data\n  }\n\n  // Add Task\n  const addTask = async (task) => {\n\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(task),\n    })\n\n    const data = await res.json()\n    setTasks([...tasks, data])\n\n    // const id = Math.floor(Math.random() * 10000) + 1\n    // const newTask = { id, ...task}\n    // setTasks([...tasks, newTask])\n  }\n\n  // Delete task\n  const deleteTask = async (id) => {\n\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    })\n\n    setTasks(tasks.filter((task) => task.id !== id ))\n  }\n\n  // Toggle Reminder\n  const toggleReminder = async (id) => {\n\n    const taskToToggle = await fetchTask(id)\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder}\n\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updTask)\n    })\n\n    const data = await res.json()\n    \n    setTasks(\n      tasks.map((task) => \n        task.id === id ? {...task, reminder: data.reminder} : task\n      )\n    )\n\n  }\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header \n          onAdd = {() => setShowAddTask(!showAddTask)} \n          showAdd = {showAddTask}\n        />\n\n        <Route path = '/' exact render = {(props) => (\n          <>\n            {showAddTask && <AddTask onAdd = {addTask} />}\n            {\n              tasks.length > 0 ? \n              (< Tasks tasks = {tasks} onDelete = {deleteTask} onToggle = {toggleReminder} />) :\n              (\"No Tasks to Show\")\n            }\n          </>\n        )} />\n        <Route path = '/about' component = {About} />\n        <Footer />\n      </div>\n    </Router>\n  )\n\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}